#!/usr/bin/env bash

usage() { 
    cat <<EOF
usage: ${0##*/} [--help, -v] {all,SUBMIT_OUTPUTS...}
EOF
}

help() {
    usage
    cat <<EOF

Parses batchload outputs, looks for failed files and prints the dataset
that was supposed to be run. With 'all', uses dq2batch-*.sh.o*.

With -v (or --verbose) flag, prints the whole summary to the error stream. 
EOF
}

verbose=false
for arg in $@
do 
    case $arg in 
	--help ) help; exit 1 ;;
	-h ) help; exit 1 ;;
	-v|--verbose ) verbose=true ;;
	all ) files+=dq2batch-*.sh.o* ;;
	*) files+=${arg}" " ;;
    esac
done

if [[ -z $files ]]
    then 
    # allow piping
    if [[ ! -t 0 ]] 
    then 
	files=$(cat)
    else
	usage
	exit 1
    fi
fi

for f in $files
do
    ftail=$(tail $f)

    if [[ -n $(grep 'No download attempts made' <<< $ftail) ]]
    then 
	continue
    fi
    
    failstr=$(tail $f | sed -nr 's/Number of failed[^$]*: ([0-9])/\1/p')
    if [[ -z $failstr ]]
	then 
	echo "WARNING: ${f%.o*} doesn't seem to have finished" 1>&2 
    fi

    if [[ $failstr != 0 || -z $failstr ]]
	then 
	dataset=$(sed -nr 's/dq2-get (.*)/\1/p' ${f%.o*}) 
	if $verbose
	    then 
	    echo " ----- $dataset ----- " 1>&2
	    echo "From: $f" 1>&2
	    tail -n9 $f 1>&2
	    echo 1>&2
	fi
	echo $dataset

    fi
    if $verbose 
	then 
	echo " ------------------ "
    fi
done | sort -u 
