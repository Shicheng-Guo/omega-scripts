#!/usr/bin/env bash

usage() {
    cat <<EOF
usage: ${0##*/} [--help] [containers...]
EOF
}
doc() { 
    usage
    echo 
    cat <<EOF
Creates and submits dq2-get jobs to PBS. One job will be created for 
each container listed. 

The datasets will be downloaded to your working directory. 

NOTE: You should only run this in an empty directory where there is room 
to download lots of data! The messy nature of submitting to PBS means your 
working directory may become littered with shell scripts and batch output. 

This is supposed to be stupidly easy to use. If you have questions (or 
better yet, suggestions) ask Dan. 
EOF
}
script_name=dq2batch.sh

test_run=false
arg_array=($@)
eaten=0
for argn in $(seq 0 ${#arg_array[*]} )
do 
    arg=${arg_array[$(($argn + $eaten))]}
    case $arg in 
	--help )
	    doc
	    exit 1 ;;
	--test )
	    test_run=true ;;
	-h) 
	    doc 
	    exit 1 ;;
	-*)
	    dq2_args+=${arg}" "${arg_array[$((
	    eaten=$(( 1 + $eaten))
	    echo $argn
	    ;; 
	*)
	    files+=${arg}" " ;;
    esac
done
if [[ -z $files ]]
    then 
    if [[ ! -t 0 ]]
    then 
	files=$(cat)
    else
	usage
	echo "no containers, quitting..." 1>&2
	exit 1
    fi
fi

if $test_run
    then 
    echo $files
    (
	set -f 
	echo $dq2_args
    )
    exit 1
fi

if ! command -v voms-proxy-init > /dev/null
then 
    echo "voms-proxy-init not found (did you setup dq2?), quitting..." 1>&2
    exit 1
fi 
voms-proxy-init -voms atlas -out local_cert
if [[ $? != 0 ]] 
then 
    echo 'voms failure, quitting...' 1>&2
    exit 1
fi

cat >| $script_name <<EOF
shopt -s expand_aliases

export ATLAS_LOCAL_ROOT_BASE=/home/hep/share/app/atlas/ATLASLocalRootBase
alias setupATLAS='source \${ATLAS_LOCAL_ROOT_BASE}/user/atlasLocalSetup.sh'
setupATLAS --quiet

dq2script=\${ATLAS_LOCAL_ROOT_BASE}/packageSetups/atlasLocalDQ2ClientSetup.sh
alias localSetupDQ2Client='source \${dq2script}'

opts="--skipConfirm --dq2ClientVersion \${dq2ClientVersionVal} --quiet"
localSetupDQ2Client \$opts

echo 'submitted from: ' \$PBS_O_WORKDIR 
cd \$PBS_O_WORKDIR

voms-proxy-init -voms atlas -noregen -q -cert local_cert
EOF

# cat ~/scripts/dqsetup.sh >| $script_name

file_array=(${files})

for i in ${!file_array[*]}
do 
    newname=${script_name%.sh}-${i}.sh
    cp $script_name $newname
    echo "dq2-get ${file_array[$i]}" >> $newname
    qsub -q hep -l walltime=01:00:00:00 $newname

done

